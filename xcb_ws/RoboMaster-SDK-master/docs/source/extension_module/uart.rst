================
UART 接口
================

介绍
------------

UART 是第三方平台跟 EP 连接的一种方式。用户通过 UART 可以很方便地将搭载在 EP 上的单片机跟 EP 建立连接，并在单片机上实现交互逻辑，使用明文 SDK 和 EP 机器人进行通信，实现对 EP 的自动化控制。

.. _uart_pin:

引脚说明
------------

EP 的 UART 接口设置在运动控制器上，引脚说明如下：

	.. image:: ../images/uart.png
		:align: center

串口配置
-------------------

========= ====== ====== ====== ==========
通讯接口  波特率 数据位 停止位  奇偶校验
========= ====== ====== ====== ==========
UART      115200   8      1     none
========= ====== ====== ====== ==========

第三方平台连接方式
--------------------------

请参考 :ref:`third_part_uart`

Python 编程示例
---------------------------

1. PC 通过串口转 USB 连接到 EP 运动控制器的 UART 接口上。
2. PC 端开启串口调试助手，选择打开串口对应 COM 口。
3. 打开已跟 EP 建立连接设备的官方 App，进入 Python 编程模式。
4. 在 Python 编程界面下，写一个简单的程序，使用 read_string() 读取串口数据，打印出来后再通过 write_string() 进行转发，并点击 “开始” 按钮运行程序。
5. 在串口调试助手上发送一个字符串，看是否能正确收到发出去的字符串。并查看 App 上是否正确打印了收到的字符串。

	.. image:: ../images/uart_serial.png
		:align: center

	.. centered:: 串口调试助手发送并回显字符串

	.. image:: ../images/uart_pc.png
		:align: center

	.. centered:: App 打印收到的字符串并进行转发

明文 SDK 示例
---------------------------

1. PC 通过串口转 USB 连接到 EP 运动控制器的 UART 接口上。
2. PC 端开启串口调试助手，选择打开串口对应 COM 口。
3. 在串口调试助手上发送字符串 ``command;``，若能收到 EP 发回来的 ``ok`` 表示明文 SDK 解析成功。

	.. image:: ../images/uart_serial_sdk.png
		:align: center

	.. centered:: 串口调试助手发送 SDK 字符串收到回应

.. caution::

    在通过 UART 发送明文 SDK 指令时，一定要记得在命令后面加 ``;`` 分号，否则会解析失败。

Python API
--------------------------

请参考 :doc:`UART<../python/uart>`
